

@{
    ViewData["Title"] = "Task List";
}

<h2>Task List</h2>

<a href="@Url.Action("Create", "TaskView")" id="create-new-task" class="btn btn-primary">Create New Task</a>
<a href="/" class="btn btn-danger" style="float: right;" id="logoutButton">Logout</a>


<div class="row mt-3">
    <div class="col-md-3">
        <input type="text" id="searchTitle" class="form-control" placeholder="Search by Title">
    </div>
    <div class="col-md-3">
        <select id="statusFilter" class="form-control">
            <option value="">Filter by Status</option>
            <option value="Pending">Pending</option>
            <option value="In Progress">In Progress</option>
            <option value="Completed">Completed</option>
        </select>
    </div>
    <div class="col-md-3">
        <input type="date" id="dueDateFilter" class="form-control">
    </div>
    <div class="col-md-3">
        <select id="assignedUserFilter" class="form-control">
            <option value="">Filter by Assigned User</option>
        </select>
    </div>
</div>

<button id="applyFilters" class="btn btn-success mt-2">Apply Filters</button>

<table class="table mt-3">
    <thead>
        <tr>
            <th>Title</th>
            <th>Status</th>
            <th>Due Date</th>
            <th>Assigned User</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody id="taskTableBody">
    </tbody>
</table>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        var roleId = localStorage.getItem("roleId");
        var token = localStorage.getItem("token");

        if (!token) {
            document.location.href = "/";
        }

        if (roleId == 1) {
            $("#create-new-task").show();
        } else {
            $("#create-new-task").hide();
        }
        
       

        if (roleId != 1) {
        $("#assignedUserFilter").parent().hide(); 
    }

   
    function loadUsers() {
        $.ajax({
            url: "/TaskView/GetUsers",
            type: "GET",
            dataType: "json",
            success: function (data) {
                if (Array.isArray(data)) {
                    $("#assignedUserFilter").empty().append('<option value="">Filter by Assigned User</option>');

                    data.forEach(user => {
                        $("#assignedUserFilter").append(
                            `<option value="${user.userId}">${user.fullName}</option>` // Corrected casing
                        );
                    });
                } else {
                    console.error("Unexpected data format:", data);
                }
            },
            error: function (xhr, status, error) {
                console.error("Error fetching users:", error);
            }
        });
    }


        function loadTasks() {
        var searchTitle = $("#searchTitle").val().trim() || null;
        var statusFilter = $("#statusFilter").val() || null;
        var dueDateFilter = $("#dueDateFilter").val() || null;
        var assignedUserFilter = $("#assignedUserFilter").val() || null;

        $.ajax({
            url: "/api/task",
            type: "GET",
            dataType: "json",
            headers: { "Authorization": "Bearer " + localStorage.getItem("token") },
            data: { searchTitle, statusFilter, dueDateFilter, assignedUserFilter },
            success: function (data) {
                $("#taskTableBody").empty();
                data.$values.forEach(function (task) {
                    var row = `<tr>
                            <td>${task.title}</td>
                            <td>${task.status}</td>
                            <td>${task.dueDate || "N/A"}</td>
                            <td>${task.assignedUser}</td>
                            <td>
                                <a href="/TaskView/Details/${task.taskId}">Details</a> |
                                <a href="/TaskView/Edit/${task.taskId}">Edit</a> |
                                ${roleId == 1 ? `<a href="#" class="deleteTask" data-id="${task.taskId}">Delete</a>` : ''}
                            </td>
                        </tr>`;
                    $("#taskTableBody").append(row);
                });
            },
            error: function () {
                alert("Error fetching tasks.");
            }
        });
    }

        loadUsers();
        loadTasks();

        $("#applyFilters").click(function () {
            loadTasks();
        });

        $(document).on("click", ".deleteTask", function (event) {
            event.preventDefault();
            var taskId = $(this).data("id");

            if (confirm("Are you sure you want to delete this task?")) {
                $.ajax({
                    url: "/api/task/" + taskId,
                    type: "DELETE",
                    headers: { "Authorization": "Bearer " + localStorage.getItem("token") },
                    success: function () {
                        alert("Task deleted successfully!");
                        loadTasks();
                    },
                    error: function () {
                        alert("Error deleting task.");
                    }
                });
            }
        });

        $("#logoutButton").click(function (event) {
            event.preventDefault();
            if (confirm("Are you sure you want to logout?")) {
                $.ajax({
                    url: "/api/auth/logout",
                    type: "POST",
                    success: function (response) {
                        alert(response.message);
                        localStorage.removeItem("token");
                        window.location.href = "/";
                    },
                    error: function () {
                        alert("Logout failed. Please try again.");
                    }
                });
            }
        });
    });
</script>
